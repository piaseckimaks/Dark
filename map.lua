function MapEntities()
    local mapLyout = {
        {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','_','_','#','#','#','_','_','#'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
        {'#','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
        {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
    }

    Map = {}
    for i=1, #mapLyout, 1 do
        Map[i] = {}
        for j=1, #mapLyout[i], 1 do
            if mapLyout[i][j] == '#' then
                table.insert(
                        Map[i], 
                        Concord.entity(World)
                            :give("info", "Wall")
                            :give("position", (j-1)*32, (i-1)*32)
                            :give("drawable")
                            :give("collisionable")
                            :give("quads", "assets/1 Tiles/Tile_72.png", 32, 32)
                            :give("velocity", 0, 0)
                )
            end

            if mapLyout[i][j] == '_' then
                table.insert(
                        Map[i], 
                        Concord.entity(World)
                            :give("info", "Path")
                            :give("position", (j-1)*32, (i-1)*32)
                            --:give("drawable")
                            :give("quads", "assets/1 Tiles/Tile_62.png", 32, 32)
                )
            end
        end
    end
end

-- table.insert(
--             Map, 
--             Concord.entity(World)
--                 :give("position", 0, i)
--                 :give("drawable")
--                 :give("quads", "assets/1 Tiles/Tile_72.png", 32, 32)
--     )